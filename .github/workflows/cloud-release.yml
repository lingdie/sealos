name: Release Cloud

on:
  release:
    types: [ published ]

env:
  # Common versions
  GO_VERSION: "1.20"
  DEFAULT_OWNER: "labring"
  TAG: ${{ github.event.release.tag_name }}

jobs:
  save-sealos:
    uses: ./.github/workflows/import-save-sealos.yml

  release-controllers:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_PAT }}
      - uses: ./.github/workflows/controllers.yml
        with:
          push_image: true
          push_image_tag: ${{ env.TAG }}

  release-frontends:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_PAT }}
      - uses: ./.github/workflows/frontend.yml
        with:
          push_image: true
          push_image_tag: ${{ env.TAG }}

  release-service:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_PAT }}
      - uses: ./.github/workflows/services.yml
        with:
          push_image: true
          push_image_tag: ${{ env.TAG }}

  release-cloud:
    runs-on: ubuntu-latest
    needs:
      - release-controllers
      - release-frontends
      - release-service
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_PAT }}
      - uses: ./.github/workflows/cloud.yml
        with:
          push_image: true
          push_image_tag: ${{ env.TAG }}
          build_from: ${{ env.TAG }}
