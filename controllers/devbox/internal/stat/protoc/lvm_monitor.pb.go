// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: lvm_monitor.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetThinPoolMetricsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ThinPoolName  string                 `protobuf:"bytes,1,opt,name=thin_pool_name,json=thinPoolName,proto3" json:"thin_pool_name,omitempty"`
	NodeName      string                 `protobuf:"bytes,2,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	VgName        string                 `protobuf:"bytes,3,opt,name=vg_name,json=vgName,proto3" json:"vg_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetThinPoolMetricsRequest) Reset() {
	*x = GetThinPoolMetricsRequest{}
	mi := &file_lvm_monitor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetThinPoolMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetThinPoolMetricsRequest) ProtoMessage() {}

func (x *GetThinPoolMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_monitor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetThinPoolMetricsRequest.ProtoReflect.Descriptor instead.
func (*GetThinPoolMetricsRequest) Descriptor() ([]byte, []int) {
	return file_lvm_monitor_proto_rawDescGZIP(), []int{0}
}

func (x *GetThinPoolMetricsRequest) GetThinPoolName() string {
	if x != nil {
		return x.ThinPoolName
	}
	return ""
}

func (x *GetThinPoolMetricsRequest) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *GetThinPoolMetricsRequest) GetVgName() string {
	if x != nil {
		return x.VgName
	}
	return ""
}

type GetThinPoolMetricsResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Metrics       []*ThinPoolMetricsProto `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
	Error         string                  `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetThinPoolMetricsResponse) Reset() {
	*x = GetThinPoolMetricsResponse{}
	mi := &file_lvm_monitor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetThinPoolMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetThinPoolMetricsResponse) ProtoMessage() {}

func (x *GetThinPoolMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_monitor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetThinPoolMetricsResponse.ProtoReflect.Descriptor instead.
func (*GetThinPoolMetricsResponse) Descriptor() ([]byte, []int) {
	return file_lvm_monitor_proto_rawDescGZIP(), []int{1}
}

func (x *GetThinPoolMetricsResponse) GetMetrics() []*ThinPoolMetricsProto {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *GetThinPoolMetricsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetThinPoolStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ThinPoolName  string                 `protobuf:"bytes,1,opt,name=thin_pool_name,json=thinPoolName,proto3" json:"thin_pool_name,omitempty"`
	NodeName      string                 `protobuf:"bytes,2,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetThinPoolStatsRequest) Reset() {
	*x = GetThinPoolStatsRequest{}
	mi := &file_lvm_monitor_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetThinPoolStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetThinPoolStatsRequest) ProtoMessage() {}

func (x *GetThinPoolStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_monitor_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetThinPoolStatsRequest.ProtoReflect.Descriptor instead.
func (*GetThinPoolStatsRequest) Descriptor() ([]byte, []int) {
	return file_lvm_monitor_proto_rawDescGZIP(), []int{2}
}

func (x *GetThinPoolStatsRequest) GetThinPoolName() string {
	if x != nil {
		return x.ThinPoolName
	}
	return ""
}

func (x *GetThinPoolStatsRequest) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

type GetThinPoolStatsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stats         []*ThinPoolStatsProto  `protobuf:"bytes,1,rep,name=stats,proto3" json:"stats,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetThinPoolStatsResponse) Reset() {
	*x = GetThinPoolStatsResponse{}
	mi := &file_lvm_monitor_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetThinPoolStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetThinPoolStatsResponse) ProtoMessage() {}

func (x *GetThinPoolStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_monitor_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetThinPoolStatsResponse.ProtoReflect.Descriptor instead.
func (*GetThinPoolStatsResponse) Descriptor() ([]byte, []int) {
	return file_lvm_monitor_proto_rawDescGZIP(), []int{3}
}

func (x *GetThinPoolStatsResponse) GetStats() []*ThinPoolStatsProto {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *GetThinPoolStatsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetVolumeGroupInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VgName        string                 `protobuf:"bytes,1,opt,name=vg_name,json=vgName,proto3" json:"vg_name,omitempty"`
	NodeName      string                 `protobuf:"bytes,2,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVolumeGroupInfoRequest) Reset() {
	*x = GetVolumeGroupInfoRequest{}
	mi := &file_lvm_monitor_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVolumeGroupInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVolumeGroupInfoRequest) ProtoMessage() {}

func (x *GetVolumeGroupInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_monitor_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVolumeGroupInfoRequest.ProtoReflect.Descriptor instead.
func (*GetVolumeGroupInfoRequest) Descriptor() ([]byte, []int) {
	return file_lvm_monitor_proto_rawDescGZIP(), []int{4}
}

func (x *GetVolumeGroupInfoRequest) GetVgName() string {
	if x != nil {
		return x.VgName
	}
	return ""
}

func (x *GetVolumeGroupInfoRequest) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

type GetVolumeGroupInfoResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Vgs           []*VolumeGroupInfoProto `protobuf:"bytes,1,rep,name=vgs,proto3" json:"vgs,omitempty"`
	Error         string                  `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVolumeGroupInfoResponse) Reset() {
	*x = GetVolumeGroupInfoResponse{}
	mi := &file_lvm_monitor_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVolumeGroupInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVolumeGroupInfoResponse) ProtoMessage() {}

func (x *GetVolumeGroupInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_monitor_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVolumeGroupInfoResponse.ProtoReflect.Descriptor instead.
func (*GetVolumeGroupInfoResponse) Descriptor() ([]byte, []int) {
	return file_lvm_monitor_proto_rawDescGZIP(), []int{5}
}

func (x *GetVolumeGroupInfoResponse) GetVgs() []*VolumeGroupInfoProto {
	if x != nil {
		return x.Vgs
	}
	return nil
}

func (x *GetVolumeGroupInfoResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_lvm_monitor_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_monitor_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_lvm_monitor_proto_rawDescGZIP(), []int{6}
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Healthy       bool                   `protobuf:"varint,1,opt,name=healthy,proto3" json:"healthy,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_lvm_monitor_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_monitor_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_lvm_monitor_proto_rawDescGZIP(), []int{7}
}

func (x *HealthCheckResponse) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *HealthCheckResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// ThinPoolMetrics protobuf
type ThinPoolMetricsProto struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	Timestamp    int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ThinPoolName string                 `protobuf:"bytes,2,opt,name=thin_pool_name,json=thinPoolName,proto3" json:"thin_pool_name,omitempty"`
	NodeName     string                 `protobuf:"bytes,3,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	VgName       string                 `protobuf:"bytes,4,opt,name=vg_name,json=vgName,proto3" json:"vg_name,omitempty"`
	Uuid         string                 `protobuf:"bytes,5,opt,name=uuid,proto3" json:"uuid,omitempty"`
	HealthStatus int32                  `protobuf:"varint,6,opt,name=health_status,json=healthStatus,proto3" json:"health_status,omitempty"`
	ActiveStatus string                 `protobuf:"bytes,7,opt,name=active_status,json=activeStatus,proto3" json:"active_status,omitempty"`
	PoolName     string                 `protobuf:"bytes,8,opt,name=pool_name,json=poolName,proto3" json:"pool_name,omitempty"`
	// Capacity metrics
	TotalSize        int64 `protobuf:"varint,9,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	UsedSize         int64 `protobuf:"varint,10,opt,name=used_size,json=usedSize,proto3" json:"used_size,omitempty"`
	VgFreeSize       int64 `protobuf:"varint,11,opt,name=vg_free_size,json=vgFreeSize,proto3" json:"vg_free_size,omitempty"`
	MetadataSize     int64 `protobuf:"varint,12,opt,name=metadata_size,json=metadataSize,proto3" json:"metadata_size,omitempty"`
	MetadataUsedSize int64 `protobuf:"varint,13,opt,name=metadata_used_size,json=metadataUsedSize,proto3" json:"metadata_used_size,omitempty"`
	MetadataFreeSize int64 `protobuf:"varint,14,opt,name=metadata_free_size,json=metadataFreeSize,proto3" json:"metadata_free_size,omitempty"`
	// Usage metrics
	DataPercent         float64 `protobuf:"fixed64,15,opt,name=data_percent,json=dataPercent,proto3" json:"data_percent,omitempty"`
	MetadataUsedPercent float64 `protobuf:"fixed64,16,opt,name=metadata_used_percent,json=metadataUsedPercent,proto3" json:"metadata_used_percent,omitempty"`
	SnapshotUsedPercent float64 `protobuf:"fixed64,17,opt,name=snapshot_used_percent,json=snapshotUsedPercent,proto3" json:"snapshot_used_percent,omitempty"`
	// Snapshot metrics
	SnapshotCount int32 `protobuf:"varint,18,opt,name=snapshot_count,json=snapshotCount,proto3" json:"snapshot_count,omitempty"`
	SnapshotSize  int64 `protobuf:"varint,19,opt,name=snapshot_size,json=snapshotSize,proto3" json:"snapshot_size,omitempty"`
	// Performance metrics
	ReadIops      int64   `protobuf:"varint,20,opt,name=read_iops,json=readIops,proto3" json:"read_iops,omitempty"`
	WriteIops     int64   `protobuf:"varint,21,opt,name=write_iops,json=writeIops,proto3" json:"write_iops,omitempty"`
	ReadLatency   float64 `protobuf:"fixed64,22,opt,name=read_latency,json=readLatency,proto3" json:"read_latency,omitempty"`
	WriteLatency  float64 `protobuf:"fixed64,23,opt,name=write_latency,json=writeLatency,proto3" json:"write_latency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ThinPoolMetricsProto) Reset() {
	*x = ThinPoolMetricsProto{}
	mi := &file_lvm_monitor_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThinPoolMetricsProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThinPoolMetricsProto) ProtoMessage() {}

func (x *ThinPoolMetricsProto) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_monitor_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThinPoolMetricsProto.ProtoReflect.Descriptor instead.
func (*ThinPoolMetricsProto) Descriptor() ([]byte, []int) {
	return file_lvm_monitor_proto_rawDescGZIP(), []int{8}
}

func (x *ThinPoolMetricsProto) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ThinPoolMetricsProto) GetThinPoolName() string {
	if x != nil {
		return x.ThinPoolName
	}
	return ""
}

func (x *ThinPoolMetricsProto) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *ThinPoolMetricsProto) GetVgName() string {
	if x != nil {
		return x.VgName
	}
	return ""
}

func (x *ThinPoolMetricsProto) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ThinPoolMetricsProto) GetHealthStatus() int32 {
	if x != nil {
		return x.HealthStatus
	}
	return 0
}

func (x *ThinPoolMetricsProto) GetActiveStatus() string {
	if x != nil {
		return x.ActiveStatus
	}
	return ""
}

func (x *ThinPoolMetricsProto) GetPoolName() string {
	if x != nil {
		return x.PoolName
	}
	return ""
}

func (x *ThinPoolMetricsProto) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *ThinPoolMetricsProto) GetUsedSize() int64 {
	if x != nil {
		return x.UsedSize
	}
	return 0
}

func (x *ThinPoolMetricsProto) GetVgFreeSize() int64 {
	if x != nil {
		return x.VgFreeSize
	}
	return 0
}

func (x *ThinPoolMetricsProto) GetMetadataSize() int64 {
	if x != nil {
		return x.MetadataSize
	}
	return 0
}

func (x *ThinPoolMetricsProto) GetMetadataUsedSize() int64 {
	if x != nil {
		return x.MetadataUsedSize
	}
	return 0
}

func (x *ThinPoolMetricsProto) GetMetadataFreeSize() int64 {
	if x != nil {
		return x.MetadataFreeSize
	}
	return 0
}

func (x *ThinPoolMetricsProto) GetDataPercent() float64 {
	if x != nil {
		return x.DataPercent
	}
	return 0
}

func (x *ThinPoolMetricsProto) GetMetadataUsedPercent() float64 {
	if x != nil {
		return x.MetadataUsedPercent
	}
	return 0
}

func (x *ThinPoolMetricsProto) GetSnapshotUsedPercent() float64 {
	if x != nil {
		return x.SnapshotUsedPercent
	}
	return 0
}

func (x *ThinPoolMetricsProto) GetSnapshotCount() int32 {
	if x != nil {
		return x.SnapshotCount
	}
	return 0
}

func (x *ThinPoolMetricsProto) GetSnapshotSize() int64 {
	if x != nil {
		return x.SnapshotSize
	}
	return 0
}

func (x *ThinPoolMetricsProto) GetReadIops() int64 {
	if x != nil {
		return x.ReadIops
	}
	return 0
}

func (x *ThinPoolMetricsProto) GetWriteIops() int64 {
	if x != nil {
		return x.WriteIops
	}
	return 0
}

func (x *ThinPoolMetricsProto) GetReadLatency() float64 {
	if x != nil {
		return x.ReadLatency
	}
	return 0
}

func (x *ThinPoolMetricsProto) GetWriteLatency() float64 {
	if x != nil {
		return x.WriteLatency
	}
	return 0
}

// ThinPoolStats protobuf
type ThinPoolStatsProto struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	Timestamp    int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ThinPoolName string                 `protobuf:"bytes,2,opt,name=thin_pool_name,json=thinPoolName,proto3" json:"thin_pool_name,omitempty"`
	NodeName     string                 `protobuf:"bytes,3,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	VgName       string                 `protobuf:"bytes,4,opt,name=vg_name,json=vgName,proto3" json:"vg_name,omitempty"`
	Uuid         string                 `protobuf:"bytes,5,opt,name=uuid,proto3" json:"uuid,omitempty"`
	HealthStatus int32                  `protobuf:"varint,6,opt,name=health_status,json=healthStatus,proto3" json:"health_status,omitempty"`
	ActiveStatus string                 `protobuf:"bytes,7,opt,name=active_status,json=activeStatus,proto3" json:"active_status,omitempty"`
	PoolName     string                 `protobuf:"bytes,8,opt,name=pool_name,json=poolName,proto3" json:"pool_name,omitempty"`
	// Capacity metrics
	TotalSize        int64 `protobuf:"varint,9,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	UsedSize         int64 `protobuf:"varint,10,opt,name=used_size,json=usedSize,proto3" json:"used_size,omitempty"`
	VgFreeSize       int64 `protobuf:"varint,11,opt,name=vg_free_size,json=vgFreeSize,proto3" json:"vg_free_size,omitempty"`
	MetadataSize     int64 `protobuf:"varint,12,opt,name=metadata_size,json=metadataSize,proto3" json:"metadata_size,omitempty"`
	MetadataUsedSize int64 `protobuf:"varint,13,opt,name=metadata_used_size,json=metadataUsedSize,proto3" json:"metadata_used_size,omitempty"`
	MetadataFreeSize int64 `protobuf:"varint,14,opt,name=metadata_free_size,json=metadataFreeSize,proto3" json:"metadata_free_size,omitempty"`
	// Usage metrics
	DataPercent         float64 `protobuf:"fixed64,15,opt,name=data_percent,json=dataPercent,proto3" json:"data_percent,omitempty"`
	MetadataUsedPercent float64 `protobuf:"fixed64,16,opt,name=metadata_used_percent,json=metadataUsedPercent,proto3" json:"metadata_used_percent,omitempty"`
	SnapshotUsedPercent float64 `protobuf:"fixed64,17,opt,name=snapshot_used_percent,json=snapshotUsedPercent,proto3" json:"snapshot_used_percent,omitempty"`
	// Snapshot metrics
	SnapshotCount int32 `protobuf:"varint,18,opt,name=snapshot_count,json=snapshotCount,proto3" json:"snapshot_count,omitempty"`
	SnapshotSize  int64 `protobuf:"varint,19,opt,name=snapshot_size,json=snapshotSize,proto3" json:"snapshot_size,omitempty"`
	// Performance metrics
	ReadIops      int64   `protobuf:"varint,20,opt,name=read_iops,json=readIops,proto3" json:"read_iops,omitempty"`
	WriteIops     int64   `protobuf:"varint,21,opt,name=write_iops,json=writeIops,proto3" json:"write_iops,omitempty"`
	ReadLatency   float64 `protobuf:"fixed64,22,opt,name=read_latency,json=readLatency,proto3" json:"read_latency,omitempty"`
	WriteLatency  float64 `protobuf:"fixed64,23,opt,name=write_latency,json=writeLatency,proto3" json:"write_latency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ThinPoolStatsProto) Reset() {
	*x = ThinPoolStatsProto{}
	mi := &file_lvm_monitor_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThinPoolStatsProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThinPoolStatsProto) ProtoMessage() {}

func (x *ThinPoolStatsProto) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_monitor_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThinPoolStatsProto.ProtoReflect.Descriptor instead.
func (*ThinPoolStatsProto) Descriptor() ([]byte, []int) {
	return file_lvm_monitor_proto_rawDescGZIP(), []int{9}
}

func (x *ThinPoolStatsProto) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ThinPoolStatsProto) GetThinPoolName() string {
	if x != nil {
		return x.ThinPoolName
	}
	return ""
}

func (x *ThinPoolStatsProto) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *ThinPoolStatsProto) GetVgName() string {
	if x != nil {
		return x.VgName
	}
	return ""
}

func (x *ThinPoolStatsProto) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ThinPoolStatsProto) GetHealthStatus() int32 {
	if x != nil {
		return x.HealthStatus
	}
	return 0
}

func (x *ThinPoolStatsProto) GetActiveStatus() string {
	if x != nil {
		return x.ActiveStatus
	}
	return ""
}

func (x *ThinPoolStatsProto) GetPoolName() string {
	if x != nil {
		return x.PoolName
	}
	return ""
}

func (x *ThinPoolStatsProto) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *ThinPoolStatsProto) GetUsedSize() int64 {
	if x != nil {
		return x.UsedSize
	}
	return 0
}

func (x *ThinPoolStatsProto) GetVgFreeSize() int64 {
	if x != nil {
		return x.VgFreeSize
	}
	return 0
}

func (x *ThinPoolStatsProto) GetMetadataSize() int64 {
	if x != nil {
		return x.MetadataSize
	}
	return 0
}

func (x *ThinPoolStatsProto) GetMetadataUsedSize() int64 {
	if x != nil {
		return x.MetadataUsedSize
	}
	return 0
}

func (x *ThinPoolStatsProto) GetMetadataFreeSize() int64 {
	if x != nil {
		return x.MetadataFreeSize
	}
	return 0
}

func (x *ThinPoolStatsProto) GetDataPercent() float64 {
	if x != nil {
		return x.DataPercent
	}
	return 0
}

func (x *ThinPoolStatsProto) GetMetadataUsedPercent() float64 {
	if x != nil {
		return x.MetadataUsedPercent
	}
	return 0
}

func (x *ThinPoolStatsProto) GetSnapshotUsedPercent() float64 {
	if x != nil {
		return x.SnapshotUsedPercent
	}
	return 0
}

func (x *ThinPoolStatsProto) GetSnapshotCount() int32 {
	if x != nil {
		return x.SnapshotCount
	}
	return 0
}

func (x *ThinPoolStatsProto) GetSnapshotSize() int64 {
	if x != nil {
		return x.SnapshotSize
	}
	return 0
}

func (x *ThinPoolStatsProto) GetReadIops() int64 {
	if x != nil {
		return x.ReadIops
	}
	return 0
}

func (x *ThinPoolStatsProto) GetWriteIops() int64 {
	if x != nil {
		return x.WriteIops
	}
	return 0
}

func (x *ThinPoolStatsProto) GetReadLatency() float64 {
	if x != nil {
		return x.ReadLatency
	}
	return 0
}

func (x *ThinPoolStatsProto) GetWriteLatency() float64 {
	if x != nil {
		return x.WriteLatency
	}
	return 0
}

type VolumeGroupInfoProto struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Uuid          string                 `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	TotalSize     int64                  `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	FreeSize      int64                  `protobuf:"varint,4,opt,name=free_size,json=freeSize,proto3" json:"free_size,omitempty"`
	UsedSize      int64                  `protobuf:"varint,5,opt,name=used_size,json=usedSize,proto3" json:"used_size,omitempty"`
	Status        string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	NodeName      string                 `protobuf:"bytes,7,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VolumeGroupInfoProto) Reset() {
	*x = VolumeGroupInfoProto{}
	mi := &file_lvm_monitor_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VolumeGroupInfoProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VolumeGroupInfoProto) ProtoMessage() {}

func (x *VolumeGroupInfoProto) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_monitor_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VolumeGroupInfoProto.ProtoReflect.Descriptor instead.
func (*VolumeGroupInfoProto) Descriptor() ([]byte, []int) {
	return file_lvm_monitor_proto_rawDescGZIP(), []int{10}
}

func (x *VolumeGroupInfoProto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VolumeGroupInfoProto) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *VolumeGroupInfoProto) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *VolumeGroupInfoProto) GetFreeSize() int64 {
	if x != nil {
		return x.FreeSize
	}
	return 0
}

func (x *VolumeGroupInfoProto) GetUsedSize() int64 {
	if x != nil {
		return x.UsedSize
	}
	return 0
}

func (x *VolumeGroupInfoProto) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *VolumeGroupInfoProto) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

var File_lvm_monitor_proto protoreflect.FileDescriptor

const file_lvm_monitor_proto_rawDesc = "" +
	"\n" +
	"\x11lvm_monitor.proto\x12\n" +
	"lvmmonitor\"w\n" +
	"\x19GetThinPoolMetricsRequest\x12$\n" +
	"\x0ethin_pool_name\x18\x01 \x01(\tR\fthinPoolName\x12\x1b\n" +
	"\tnode_name\x18\x02 \x01(\tR\bnodeName\x12\x17\n" +
	"\avg_name\x18\x03 \x01(\tR\x06vgName\"n\n" +
	"\x1aGetThinPoolMetricsResponse\x12:\n" +
	"\ametrics\x18\x01 \x03(\v2 .lvmmonitor.ThinPoolMetricsProtoR\ametrics\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\\\n" +
	"\x17GetThinPoolStatsRequest\x12$\n" +
	"\x0ethin_pool_name\x18\x01 \x01(\tR\fthinPoolName\x12\x1b\n" +
	"\tnode_name\x18\x02 \x01(\tR\bnodeName\"f\n" +
	"\x18GetThinPoolStatsResponse\x124\n" +
	"\x05stats\x18\x01 \x03(\v2\x1e.lvmmonitor.ThinPoolStatsProtoR\x05stats\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"Q\n" +
	"\x19GetVolumeGroupInfoRequest\x12\x17\n" +
	"\avg_name\x18\x01 \x01(\tR\x06vgName\x12\x1b\n" +
	"\tnode_name\x18\x02 \x01(\tR\bnodeName\"f\n" +
	"\x1aGetVolumeGroupInfoResponse\x122\n" +
	"\x03vgs\x18\x01 \x03(\v2 .lvmmonitor.VolumeGroupInfoProtoR\x03vgs\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\x14\n" +
	"\x12HealthCheckRequest\"I\n" +
	"\x13HealthCheckResponse\x12\x18\n" +
	"\ahealthy\x18\x01 \x01(\bR\ahealthy\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xc5\x06\n" +
	"\x14ThinPoolMetricsProto\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12$\n" +
	"\x0ethin_pool_name\x18\x02 \x01(\tR\fthinPoolName\x12\x1b\n" +
	"\tnode_name\x18\x03 \x01(\tR\bnodeName\x12\x17\n" +
	"\avg_name\x18\x04 \x01(\tR\x06vgName\x12\x12\n" +
	"\x04uuid\x18\x05 \x01(\tR\x04uuid\x12#\n" +
	"\rhealth_status\x18\x06 \x01(\x05R\fhealthStatus\x12#\n" +
	"\ractive_status\x18\a \x01(\tR\factiveStatus\x12\x1b\n" +
	"\tpool_name\x18\b \x01(\tR\bpoolName\x12\x1d\n" +
	"\n" +
	"total_size\x18\t \x01(\x03R\ttotalSize\x12\x1b\n" +
	"\tused_size\x18\n" +
	" \x01(\x03R\busedSize\x12 \n" +
	"\fvg_free_size\x18\v \x01(\x03R\n" +
	"vgFreeSize\x12#\n" +
	"\rmetadata_size\x18\f \x01(\x03R\fmetadataSize\x12,\n" +
	"\x12metadata_used_size\x18\r \x01(\x03R\x10metadataUsedSize\x12,\n" +
	"\x12metadata_free_size\x18\x0e \x01(\x03R\x10metadataFreeSize\x12!\n" +
	"\fdata_percent\x18\x0f \x01(\x01R\vdataPercent\x122\n" +
	"\x15metadata_used_percent\x18\x10 \x01(\x01R\x13metadataUsedPercent\x122\n" +
	"\x15snapshot_used_percent\x18\x11 \x01(\x01R\x13snapshotUsedPercent\x12%\n" +
	"\x0esnapshot_count\x18\x12 \x01(\x05R\rsnapshotCount\x12#\n" +
	"\rsnapshot_size\x18\x13 \x01(\x03R\fsnapshotSize\x12\x1b\n" +
	"\tread_iops\x18\x14 \x01(\x03R\breadIops\x12\x1d\n" +
	"\n" +
	"write_iops\x18\x15 \x01(\x03R\twriteIops\x12!\n" +
	"\fread_latency\x18\x16 \x01(\x01R\vreadLatency\x12#\n" +
	"\rwrite_latency\x18\x17 \x01(\x01R\fwriteLatency\"\xc3\x06\n" +
	"\x12ThinPoolStatsProto\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12$\n" +
	"\x0ethin_pool_name\x18\x02 \x01(\tR\fthinPoolName\x12\x1b\n" +
	"\tnode_name\x18\x03 \x01(\tR\bnodeName\x12\x17\n" +
	"\avg_name\x18\x04 \x01(\tR\x06vgName\x12\x12\n" +
	"\x04uuid\x18\x05 \x01(\tR\x04uuid\x12#\n" +
	"\rhealth_status\x18\x06 \x01(\x05R\fhealthStatus\x12#\n" +
	"\ractive_status\x18\a \x01(\tR\factiveStatus\x12\x1b\n" +
	"\tpool_name\x18\b \x01(\tR\bpoolName\x12\x1d\n" +
	"\n" +
	"total_size\x18\t \x01(\x03R\ttotalSize\x12\x1b\n" +
	"\tused_size\x18\n" +
	" \x01(\x03R\busedSize\x12 \n" +
	"\fvg_free_size\x18\v \x01(\x03R\n" +
	"vgFreeSize\x12#\n" +
	"\rmetadata_size\x18\f \x01(\x03R\fmetadataSize\x12,\n" +
	"\x12metadata_used_size\x18\r \x01(\x03R\x10metadataUsedSize\x12,\n" +
	"\x12metadata_free_size\x18\x0e \x01(\x03R\x10metadataFreeSize\x12!\n" +
	"\fdata_percent\x18\x0f \x01(\x01R\vdataPercent\x122\n" +
	"\x15metadata_used_percent\x18\x10 \x01(\x01R\x13metadataUsedPercent\x122\n" +
	"\x15snapshot_used_percent\x18\x11 \x01(\x01R\x13snapshotUsedPercent\x12%\n" +
	"\x0esnapshot_count\x18\x12 \x01(\x05R\rsnapshotCount\x12#\n" +
	"\rsnapshot_size\x18\x13 \x01(\x03R\fsnapshotSize\x12\x1b\n" +
	"\tread_iops\x18\x14 \x01(\x03R\breadIops\x12\x1d\n" +
	"\n" +
	"write_iops\x18\x15 \x01(\x03R\twriteIops\x12!\n" +
	"\fread_latency\x18\x16 \x01(\x01R\vreadLatency\x12#\n" +
	"\rwrite_latency\x18\x17 \x01(\x01R\fwriteLatency\"\xcc\x01\n" +
	"\x14VolumeGroupInfoProto\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04uuid\x18\x02 \x01(\tR\x04uuid\x12\x1d\n" +
	"\n" +
	"total_size\x18\x03 \x01(\x03R\ttotalSize\x12\x1b\n" +
	"\tfree_size\x18\x04 \x01(\x03R\bfreeSize\x12\x1b\n" +
	"\tused_size\x18\x05 \x01(\x03R\busedSize\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x12\x1b\n" +
	"\tnode_name\x18\a \x01(\tR\bnodeName2\x8c\x03\n" +
	"\x11LVMMonitorService\x12c\n" +
	"\x12GetThinPoolMetrics\x12%.lvmmonitor.GetThinPoolMetricsRequest\x1a&.lvmmonitor.GetThinPoolMetricsResponse\x12]\n" +
	"\x10GetThinPoolStats\x12#.lvmmonitor.GetThinPoolStatsRequest\x1a$.lvmmonitor.GetThinPoolStatsResponse\x12c\n" +
	"\x12GetVolumeGroupInfo\x12%.lvmmonitor.GetVolumeGroupInfoRequest\x1a&.lvmmonitor.GetVolumeGroupInfoResponse\x12N\n" +
	"\vHealthCheck\x12\x1e.lvmmonitor.HealthCheckRequest\x1a\x1f.lvmmonitor.HealthCheckResponseBBZ@github.com/labring/sealos/controllers/devbox/internal/stat/protob\x06proto3"

var (
	file_lvm_monitor_proto_rawDescOnce sync.Once
	file_lvm_monitor_proto_rawDescData []byte
)

func file_lvm_monitor_proto_rawDescGZIP() []byte {
	file_lvm_monitor_proto_rawDescOnce.Do(func() {
		file_lvm_monitor_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_lvm_monitor_proto_rawDesc), len(file_lvm_monitor_proto_rawDesc)))
	})
	return file_lvm_monitor_proto_rawDescData
}

var file_lvm_monitor_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_lvm_monitor_proto_goTypes = []any{
	(*GetThinPoolMetricsRequest)(nil),  // 0: lvmmonitor.GetThinPoolMetricsRequest
	(*GetThinPoolMetricsResponse)(nil), // 1: lvmmonitor.GetThinPoolMetricsResponse
	(*GetThinPoolStatsRequest)(nil),    // 2: lvmmonitor.GetThinPoolStatsRequest
	(*GetThinPoolStatsResponse)(nil),   // 3: lvmmonitor.GetThinPoolStatsResponse
	(*GetVolumeGroupInfoRequest)(nil),  // 4: lvmmonitor.GetVolumeGroupInfoRequest
	(*GetVolumeGroupInfoResponse)(nil), // 5: lvmmonitor.GetVolumeGroupInfoResponse
	(*HealthCheckRequest)(nil),         // 6: lvmmonitor.HealthCheckRequest
	(*HealthCheckResponse)(nil),        // 7: lvmmonitor.HealthCheckResponse
	(*ThinPoolMetricsProto)(nil),       // 8: lvmmonitor.ThinPoolMetricsProto
	(*ThinPoolStatsProto)(nil),         // 9: lvmmonitor.ThinPoolStatsProto
	(*VolumeGroupInfoProto)(nil),       // 10: lvmmonitor.VolumeGroupInfoProto
}
var file_lvm_monitor_proto_depIdxs = []int32{
	8,  // 0: lvmmonitor.GetThinPoolMetricsResponse.metrics:type_name -> lvmmonitor.ThinPoolMetricsProto
	9,  // 1: lvmmonitor.GetThinPoolStatsResponse.stats:type_name -> lvmmonitor.ThinPoolStatsProto
	10, // 2: lvmmonitor.GetVolumeGroupInfoResponse.vgs:type_name -> lvmmonitor.VolumeGroupInfoProto
	0,  // 3: lvmmonitor.LVMMonitorService.GetThinPoolMetrics:input_type -> lvmmonitor.GetThinPoolMetricsRequest
	2,  // 4: lvmmonitor.LVMMonitorService.GetThinPoolStats:input_type -> lvmmonitor.GetThinPoolStatsRequest
	4,  // 5: lvmmonitor.LVMMonitorService.GetVolumeGroupInfo:input_type -> lvmmonitor.GetVolumeGroupInfoRequest
	6,  // 6: lvmmonitor.LVMMonitorService.HealthCheck:input_type -> lvmmonitor.HealthCheckRequest
	1,  // 7: lvmmonitor.LVMMonitorService.GetThinPoolMetrics:output_type -> lvmmonitor.GetThinPoolMetricsResponse
	3,  // 8: lvmmonitor.LVMMonitorService.GetThinPoolStats:output_type -> lvmmonitor.GetThinPoolStatsResponse
	5,  // 9: lvmmonitor.LVMMonitorService.GetVolumeGroupInfo:output_type -> lvmmonitor.GetVolumeGroupInfoResponse
	7,  // 10: lvmmonitor.LVMMonitorService.HealthCheck:output_type -> lvmmonitor.HealthCheckResponse
	7,  // [7:11] is the sub-list for method output_type
	3,  // [3:7] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_lvm_monitor_proto_init() }
func file_lvm_monitor_proto_init() {
	if File_lvm_monitor_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_lvm_monitor_proto_rawDesc), len(file_lvm_monitor_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_lvm_monitor_proto_goTypes,
		DependencyIndexes: file_lvm_monitor_proto_depIdxs,
		MessageInfos:      file_lvm_monitor_proto_msgTypes,
	}.Build()
	File_lvm_monitor_proto = out.File
	file_lvm_monitor_proto_goTypes = nil
	file_lvm_monitor_proto_depIdxs = nil
}
